#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;



uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

out vec3 FragPos;
out vec3 Normal;
out vec2 TexCoords;
out float visibility;
const float density = 0.002;
const float gradient = 5.0;
void main()
{
 	gl_Position = projection * view * model * vec4(aPos, 1.0);
    Normal =  aNormal;
    TexCoords = aTexCoords;
FragPos = vec3(model * vec4(aPos, 1.0));
vec4 posRelativeToCamera = view * model * vec4(aPos, 1.0);
float distance = length(posRelativeToCamera.xyz);
visibility = exp(-pow((distance*density), gradient));
visibility = clamp(visibility, 0.0, 1.0);
}